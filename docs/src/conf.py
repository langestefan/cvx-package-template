"""Execute this file with the current directory set to its containing dir.

Note that not all possible configuration values are present in this
autogenerated file.

All configuration values have a default; values that are commented out
serve to show the default.
"""

import sys
from pathlib import Path

# add the repository root to the Python path so we can import src.package
docs_dir = Path(__file__).parent
repo_root = docs_dir.parent.parent
sys.path.insert(0, str(repo_root))

from src import package  # noqa: E402


# create symbolic links from examples to root examples directory
def copy_examples() -> None:
    """Create symbolic links from docs/src/examples/ to top-level examples/."""
    docs_dir = Path(__file__).parent  # docs/source/
    repo_root = docs_dir.parent.parent  # repo root
    source_examples_dir = repo_root / "examples"
    dest_examples_dir = docs_dir / "examples"

    # create symbolic links to files from source examples to destination
    if source_examples_dir.exists():
        for item in source_examples_dir.iterdir():
            # Skip the ruff.toml file as it's not needed in docs
            if item.name == "ruff.toml":
                continue

            dest_path = dest_examples_dir / item.name

            # Skip if symbolic link already exists
            if dest_path.exists():
                continue

            if item.is_file():
                # Create symbolic link to the file
                dest_path.symlink_to(item)
            elif item.is_dir():
                # Create symbolic link to the directory
                dest_path.symlink_to(item)
    else:
        msg = f"Source examples directory {source_examples_dir} does not exist"
        raise FileNotFoundError(msg)


def setup(app) -> None:  # noqa: ANN001, ARG001
    """Sphinx setup hook to create symbolic links to examples before building."""
    copy_examples()


__version__ = package.__version__

# --- general configuration ---
extensions = [
    "sphinx.ext.autodoc",
    "sphinx.ext.doctest",
    "sphinx.ext.todo",
    "sphinx.ext.coverage",
    "sphinx.ext.mathjax",
    "sphinx.ext.viewcode",
    "sphinx.ext.napoleon",
    "sphinxcontrib.jquery",
    "sphinx.ext.autosectionlabel",
    "sphinx_inline_tabs",
    "sphinx_design",
    "sphinx_immaterial",
    "myst_parser",
    "nbsphinx",
]

source_suffix = [".md"]
master_doc = "index"
project = "package"
copyright = "The package authors"  # noqa: A001
version = ".".join(__version__.split(".")[:2])
release = __version__

# patterns, relative to source directory, that match files and
# directories to ignore when looking for source files.
exclude_patterns = []

# name of the Pygments (syntax highlighting) style to use.
pygments_style = "sphinx"

# --- options for HTML output ---
table_styling_embed_css = False
html_theme = "sphinx_immaterial"
html_theme_options = {
    "palette": {"scheme": "default"},
    "features": [
        "header.autohide",
        "toc.follow",
        "navigation.path",
        "navigation.instant",
        "navigation.top",
        "navigation.tabs",
        "navigation.tabs.sticky",
        "navigation.tracking",
        "navigation.expand",
        "search.highlight",
        "search.share",
        "content.tabs.link",
        "announce.dismiss",
    ],
    "toc_title": "On this page",
    "repo_url": "https://github.com/cvxpy/cvxpy/",
    "repo_name": "cvxpy",
    "icon": {
        "repo": "fontawesome/brands/github",
    },
    "social": [
        {
            "icon": "fontawesome/brands/github",
            "link": "https://github.com/cvxpy/cvxpy/",
            "name": "Source on github.com",
        },
        {
            "icon": "fontawesome/brands/python",
            "link": "https://github.com/cvxpy/cvxpy/",
        },
    ],
}

html_logo = "_static/cvxlogo-transparent.png"
html_favicon = "_static/favicon.ico"

# paths that contain custom static files (such as style sheets)
html_static_path = ["_static"]
html_css_files = [
    "css/styling.css",
    "https://cdn.datatables.net/2.1.8/css/dataTables.dataTables.css",
]
html_js_files = [
    "https://cdn.datatables.net/2.1.8/js/dataTables.js",
]

# If true, "(C) Copyright ..." is shown in the HTML footer. Default is True.
html_show_copyright = True
